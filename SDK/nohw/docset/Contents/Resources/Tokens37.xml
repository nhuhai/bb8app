<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/PPHLocation.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/PPHLocation</TokenIdentifier>
			<Abstract type="html">A location represents a compartmentalized set of checkins for a merchant. A merchant may have
many locations, some of which are open at a particular time and able to accept new customer checkin.</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
            
			
			<NodeRef refid="37"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/initWithDictionary:</TokenIdentifier>
			<Abstract type="html">Read a PPHLocation from the server</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>- (id)initWithDictionary:(NSDictionary *)dictionary</Declaration>
			<Parameters>
				<Parameter>
					<Name>dictionary</Name>
					<Abstract type="html">the server response</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithDictionary:</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/save:</TokenIdentifier>
			<Abstract type="html">Save a PPHLocation to the server. If locationId is empty, this will create a new location
and the locationId parameter will become set.  Otherwise it will update an existing location.</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>- (void)save:(void ( ^ ) ( PPHError *error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">called when the network request completes</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/save:</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/deleteLocation:</TokenIdentifier>
			<Abstract type="html">Delete a PPHLocation.</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>- (void)deleteLocation:(void ( ^ ) ( PPHError *))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">called when the network request completes</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteLocation:</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/setInternalName:</TokenIdentifier>
			<Abstract type="html">The internal name of the location; this must be unique for the merchant</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *internalName</Declaration>
			
			
			<Anchor>//api/name/internalName</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/internalName</TokenIdentifier>
			<Abstract type="html">The internal name of the location; this must be unique for the merchant</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *internalName</Declaration>
			
			
			<Anchor>//api/name/internalName</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PPHLocation/internalName</TokenIdentifier>
			<Abstract type="html">The internal name of the location; this must be unique for the merchant</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *internalName</Declaration>
			
			
			<Anchor>//api/name/internalName</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/setDisplayMessage:</TokenIdentifier>
			<Abstract type="html">A short message displayed in search results</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *displayMessage</Declaration>
			
			
			<Anchor>//api/name/displayMessage</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/displayMessage</TokenIdentifier>
			<Abstract type="html">A short message displayed in search results</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *displayMessage</Declaration>
			
			
			<Anchor>//api/name/displayMessage</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PPHLocation/displayMessage</TokenIdentifier>
			<Abstract type="html">A short message displayed in search results</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *displayMessage</Declaration>
			
			
			<Anchor>//api/name/displayMessage</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/setContactInfo:</TokenIdentifier>
			<Abstract type="html">Not ALL fields of the contact info are used for locations. Line 1, Line 2, City, State,
PostalCode, Country, Phone Number and Business Name are used</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) PPHInvoiceContactInfo *contactInfo</Declaration>
			
			
			<Anchor>//api/name/contactInfo</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/contactInfo</TokenIdentifier>
			<Abstract type="html">Not ALL fields of the contact info are used for locations. Line 1, Line 2, City, State,
PostalCode, Country, Phone Number and Business Name are used</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) PPHInvoiceContactInfo *contactInfo</Declaration>
			
			
			<Anchor>//api/name/contactInfo</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PPHLocation/contactInfo</TokenIdentifier>
			<Abstract type="html">Not ALL fields of the contact info are used for locations. Line 1, Line 2, City, State,
PostalCode, Country, Phone Number and Business Name are used</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) PPHInvoiceContactInfo *contactInfo</Declaration>
			
			
			<Anchor>//api/name/contactInfo</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/setLocation:</TokenIdentifier>
			<Abstract type="html">Currently only latitude and longitude matter</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CLLocationCoordinate2D location</Declaration>
			
			
			<Anchor>//api/name/location</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/location</TokenIdentifier>
			<Abstract type="html">Currently only latitude and longitude matter</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CLLocationCoordinate2D location</Declaration>
			
			
			<Anchor>//api/name/location</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PPHLocation/location</TokenIdentifier>
			<Abstract type="html">Currently only latitude and longitude matter</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CLLocationCoordinate2D location</Declaration>
			
			
			<Anchor>//api/name/location</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/setIsAvailable:</TokenIdentifier>
			<Abstract type="html">Whether or not the location is open for checkins at the moment</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL isAvailable</Declaration>
			
			
			<Anchor>//api/name/isAvailable</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/isAvailable</TokenIdentifier>
			<Abstract type="html">Whether or not the location is open for checkins at the moment</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL isAvailable</Declaration>
			
			
			<Anchor>//api/name/isAvailable</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PPHLocation/isAvailable</TokenIdentifier>
			<Abstract type="html">Whether or not the location is open for checkins at the moment</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL isAvailable</Declaration>
			
			
			<Anchor>//api/name/isAvailable</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/setIsMobile:</TokenIdentifier>
			<Abstract type="html">Whether this location moves or always stays in the same place</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL isMobile</Declaration>
			
			
			<Anchor>//api/name/isMobile</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/isMobile</TokenIdentifier>
			<Abstract type="html">Whether this location moves or always stays in the same place</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL isMobile</Declaration>
			
			
			<Anchor>//api/name/isMobile</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PPHLocation/isMobile</TokenIdentifier>
			<Abstract type="html">Whether this location moves or always stays in the same place</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL isMobile</Declaration>
			
			
			<Anchor>//api/name/isMobile</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/setCheckinType:</TokenIdentifier>
			<Abstract type="html">Whether checkins are supported at this location</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) PPHLocationCheckinType checkinType</Declaration>
			
			
			<Anchor>//api/name/checkinType</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/checkinType</TokenIdentifier>
			<Abstract type="html">Whether checkins are supported at this location</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) PPHLocationCheckinType checkinType</Declaration>
			
			
			<Anchor>//api/name/checkinType</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PPHLocation/checkinType</TokenIdentifier>
			<Abstract type="html">Whether checkins are supported at this location</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) PPHLocationCheckinType checkinType</Declaration>
			
			
			<Anchor>//api/name/checkinType</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/setCheckinExtensionUrl:</TokenIdentifier>
			<Abstract type="html">* The URL to use in conjunction with extension type
￼￼￼</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSURL *checkinExtensionUrl</Declaration>
			
			
			<Anchor>//api/name/checkinExtensionUrl</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/checkinExtensionUrl</TokenIdentifier>
			<Abstract type="html">* The URL to use in conjunction with extension type
￼￼￼</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSURL *checkinExtensionUrl</Declaration>
			
			
			<Anchor>//api/name/checkinExtensionUrl</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PPHLocation/checkinExtensionUrl</TokenIdentifier>
			<Abstract type="html">* The URL to use in conjunction with extension type
￼￼￼</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSURL *checkinExtensionUrl</Declaration>
			
			
			<Anchor>//api/name/checkinExtensionUrl</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/setCheckinExtensionType:</TokenIdentifier>
			<Abstract type="html">Checkin extensions allow the PayPal consumer application to do things after
a buyer checks in. As of this writing, the only extension available is
&quot;postOpen&quot; which basically means open a URL in a webview after checkin.
This enables a wide variety of features such as online ordering or
loyalty program integration</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) PPHLocationCheckinExtensionType checkinExtensionType</Declaration>
			
			
			<Anchor>//api/name/checkinExtensionType</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/checkinExtensionType</TokenIdentifier>
			<Abstract type="html">Checkin extensions allow the PayPal consumer application to do things after
a buyer checks in. As of this writing, the only extension available is
&quot;postOpen&quot; which basically means open a URL in a webview after checkin.
This enables a wide variety of features such as online ordering or
loyalty program integration</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) PPHLocationCheckinExtensionType checkinExtensionType</Declaration>
			
			
			<Anchor>//api/name/checkinExtensionType</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PPHLocation/checkinExtensionType</TokenIdentifier>
			<Abstract type="html">Checkin extensions allow the PayPal consumer application to do things after
a buyer checks in. As of this writing, the only extension available is
&quot;postOpen&quot; which basically means open a URL in a webview after checkin.
This enables a wide variety of features such as online ordering or
loyalty program integration</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) PPHLocationCheckinExtensionType checkinExtensionType</Declaration>
			
			
			<Anchor>//api/name/checkinExtensionType</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/setLogoUrl:</TokenIdentifier>
			<Abstract type="html">The URL for the logo image of this location</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *logoUrl</Declaration>
			
			
			<Anchor>//api/name/logoUrl</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/logoUrl</TokenIdentifier>
			<Abstract type="html">The URL for the logo image of this location</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *logoUrl</Declaration>
			
			
			<Anchor>//api/name/logoUrl</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PPHLocation/logoUrl</TokenIdentifier>
			<Abstract type="html">The URL for the logo image of this location</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *logoUrl</Declaration>
			
			
			<Anchor>//api/name/logoUrl</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/setCheckinDurationInMinutes:</TokenIdentifier>
			<Abstract type="html">Length of time, in minutes, that an unused checkin lasts. A checkin expires after this duration,
or when the checkin is used in a payment—whichever occurs first. Minimum of 15. The default is 120.</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSInteger checkinDurationInMinutes</Declaration>
			
			
			<Anchor>//api/name/checkinDurationInMinutes</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/checkinDurationInMinutes</TokenIdentifier>
			<Abstract type="html">Length of time, in minutes, that an unused checkin lasts. A checkin expires after this duration,
or when the checkin is used in a payment—whichever occurs first. Minimum of 15. The default is 120.</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSInteger checkinDurationInMinutes</Declaration>
			
			
			<Anchor>//api/name/checkinDurationInMinutes</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PPHLocation/checkinDurationInMinutes</TokenIdentifier>
			<Abstract type="html">Length of time, in minutes, that an unused checkin lasts. A checkin expires after this duration,
or when the checkin is used in a payment—whichever occurs first. Minimum of 15. The default is 120.</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) NSInteger checkinDurationInMinutes</Declaration>
			
			
			<Anchor>//api/name/checkinDurationInMinutes</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/setGratuityType:</TokenIdentifier>
			<Abstract type="html">Whether the opportunity to set a tip should be shown to consumers in the PayPal app for this location</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) PPHGratuityType gratuityType</Declaration>
			
			
			<Anchor>//api/name/gratuityType</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/gratuityType</TokenIdentifier>
			<Abstract type="html">Whether the opportunity to set a tip should be shown to consumers in the PayPal app for this location</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) PPHGratuityType gratuityType</Declaration>
			
			
			<Anchor>//api/name/gratuityType</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PPHLocation/gratuityType</TokenIdentifier>
			<Abstract type="html">Whether the opportunity to set a tip should be shown to consumers in the PayPal app for this location</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) PPHGratuityType gratuityType</Declaration>
			
			
			<Anchor>//api/name/gratuityType</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/setLocationId:</TokenIdentifier>
			<Abstract type="html">An alphanumeric id for the location for use in other API calls</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSString *locationId</Declaration>
			
			
			<Anchor>//api/name/locationId</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/locationId</TokenIdentifier>
			<Abstract type="html">An alphanumeric id for the location for use in other API calls</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSString *locationId</Declaration>
			
			
			<Anchor>//api/name/locationId</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PPHLocation/locationId</TokenIdentifier>
			<Abstract type="html">An alphanumeric id for the location for use in other API calls</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSString *locationId</Declaration>
			
			
			<Anchor>//api/name/locationId</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/setCreateDate:</TokenIdentifier>
			<Abstract type="html">The date on which the location was originally created</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSDate *createDate</Declaration>
			
			
			<Anchor>//api/name/createDate</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/createDate</TokenIdentifier>
			<Abstract type="html">The date on which the location was originally created</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSDate *createDate</Declaration>
			
			
			<Anchor>//api/name/createDate</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PPHLocation/createDate</TokenIdentifier>
			<Abstract type="html">The date on which the location was originally created</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSDate *createDate</Declaration>
			
			
			<Anchor>//api/name/createDate</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/setUpdateDate:</TokenIdentifier>
			<Abstract type="html">The date on which the location information was last updated</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSDate *updateDate</Declaration>
			
			
			<Anchor>//api/name/updateDate</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/updateDate</TokenIdentifier>
			<Abstract type="html">The date on which the location information was last updated</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSDate *updateDate</Declaration>
			
			
			<Anchor>//api/name/updateDate</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PPHLocation/updateDate</TokenIdentifier>
			<Abstract type="html">The date on which the location information was last updated</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSDate *updateDate</Declaration>
			
			
			<Anchor>//api/name/updateDate</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/setStatus:</TokenIdentifier>
			<Abstract type="html">The current status of this location record (not the open/closed status the location itself - use isAvailable for that)</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) PPHLocationStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PPHLocation/status</TokenIdentifier>
			<Abstract type="html">The current status of this location record (not the open/closed status the location itself - use isAvailable for that)</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) PPHLocationStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PPHLocation/status</TokenIdentifier>
			<Abstract type="html">The current status of this location record (not the open/closed status the location itself - use isAvailable for that)</Abstract>
			<DeclaredIn>PPHLocation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) PPHLocationStatus status</Declaration>
			
			
			<Anchor>//api/name/status</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
        
        
	</File>
</Tokens>