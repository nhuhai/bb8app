<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/PayPalHereSDK.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/PayPalHereSDK</TokenIdentifier>
			<Abstract type="html">The main object through which you can access other resources provided by the SDK. This is a singleton
and as such has global context. This object serves three main purposes:
a) Initialization of the SDK
b) Set global configurations - for ex: you can set a network delegate to listen for networking calls
c) Access Shared resources - the other objects in the SDK such as TransactionManager, Card Reader Manager
can be accessed from this object</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
            
			
			<NodeRef refid="61"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/sharedCardReaderManager</TokenIdentifier>
			<Abstract type="html">The interface to interact with the card reader</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (PPHCardReaderManager *)sharedCardReaderManager</Declaration>
			
			
			<Anchor>//api/name/sharedCardReaderManager</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/sharedLocalManager</TokenIdentifier>
			<Abstract type="html">The interface to interact with checkin services and merchant locations</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (PPHLocalManager *)sharedLocalManager</Declaration>
			
			
			<Anchor>//api/name/sharedLocalManager</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/sharedPaymentProcessor</TokenIdentifier>
			<Abstract type="html">The interface to process payments with card swipe, keyed in/scanned, and checkins</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (PPHPaymentProcessor *)sharedPaymentProcessor</Declaration>
			
			
			<Anchor>//api/name/sharedPaymentProcessor</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/sharedAccessController</TokenIdentifier>
			<Abstract type="html">A helper to establish OAuth credentials on behalf of your application for a merchant.</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (PPHAccessController *)sharedAccessController</Declaration>
			
			
			<Anchor>//api/name/sharedAccessController</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/sharedTransactionManager</TokenIdentifier>
			<Abstract type="html">A way to do payments &amp;amp; refunds in a stateful way</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (PPHTransactionManager *)sharedTransactionManager</Declaration>
			
			
			<Anchor>//api/name/sharedTransactionManager</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/setNetworkDelegate:</TokenIdentifier>
			<Abstract type="html">Should you wish to handle your own network requests, you can set this singleton
which the PayPal Here SDK will call whenever a network request needs to go out.</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (void)setNetworkDelegate:(id&lt;PPHNetworkRequestDelegate&gt;)delegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>delegate</Name>
					<Abstract type="html">an object implementing PPHNetworkRequestDelegate which will be in charge of executing requests</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setNetworkDelegate:</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/networkDelegate</TokenIdentifier>
			<Abstract type="html">The current network request delegate.</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (id&lt;PPHNetworkRequestDelegate&gt;)networkDelegate</Declaration>
			
			
			<Anchor>//api/name/networkDelegate</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/setAnalyticsDelegate:</TokenIdentifier>
			<Abstract type="html">Should you wish to handle your own analytics, you can set this singleton.
Be warned if you don&apos;t also let us do our own analytics we will not be able
to help diagnose aggregate issues for our SDK in your application.</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (void)setAnalyticsDelegate:(id&lt;PPHAnalyticsDelegate&gt;)delegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>delegate</Name>
					<Abstract type="html">an object implementing PPHAnalyticsDelegate which will be in charge of reporting events</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setAnalyticsDelegate:</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/analyticsDelegate</TokenIdentifier>
			<Abstract type="html">The current analytics delegate.</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (id&lt;PPHAnalyticsDelegate&gt;)analyticsDelegate</Declaration>
			
			
			<Anchor>//api/name/analyticsDelegate</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/setLoggingDelegate:</TokenIdentifier>
			<Abstract type="html">Should you wish to receive internal log messages, set this delegate. See
PPHLogingDelegate for a warning about performance impact.</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (void)setLoggingDelegate:(id&lt;PPHLoggingDelegate&gt;)delegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>delegate</Name>
					<Abstract type="html">an object implementing one or more methods of
the PPHLoggingDelegate</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setLoggingDelegate:</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/loggingDelegate</TokenIdentifier>
			<Abstract type="html">The current logging delegate.</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (id&lt;PPHLoggingDelegate&gt;)loggingDelegate</Declaration>
			
			
			<Anchor>//api/name/loggingDelegate</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/activeMerchant</TokenIdentifier>
			<Abstract type="html">The currently active merchant account</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (PPHMerchantInfo *)activeMerchant</Declaration>
			
			
			<Anchor>//api/name/activeMerchant</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/clearActiveMerchant</TokenIdentifier>
			<Abstract type="html">Set the active merchant to nil and clear any state based on the active merchant.</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (void)clearActiveMerchant</Declaration>
			
			
			<Anchor>//api/name/clearActiveMerchant</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/setupWithCredentials:refreshUrl:tokenExpiryOrNil:thenCompletionHandler:</TokenIdentifier>
			<Abstract type="html">This is now the de-facto way to initialize the PPH SDK. The current API - setActiveMerchant
- will be marked for deprecation and will be removed at some point in the future.
As before, this initialization sequence will ensure that we persist certain merchant information
in secure storage. This allows the PPH SDK to re-use this information - such as email id - when such
info is not available through our API calls to backend.</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (void)setupWithCredentials:(NSString *)access_token refreshUrl:(NSString *)refresh_url tokenExpiryOrNil:(NSString *)expiry thenCompletionHandler:(PPHInitializationCompletionHandler)completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>access_token</Name>
					<Abstract type="html">The Access token returned to you from PayPal Access. You will get this after the OAuth flow is completed</Abstract>
				</Parameter><Parameter>
					<Name>refresh_url</Name>
					<Abstract type="html">Also obtained after the OAuth flow. Once the merchant has authorized your application to make transactions on
your behalf you will be able to get the access token and the refresh url from PayPal Access endpoint</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The handler that will fire once initialization is done. Your application MUST check the PPHInitResultType to ensure
there were no errors.</Abstract>
				</Parameter><Parameter>
					<Name>tokenExpiryOrNil</Name>
					<Abstract type="html">this is a nice to have and will allow the SDK to predictively pre-fetch a new token when the current token is about
to expire. Consider this case: it is possible - although unlikely - that the validity of the access token can expire between the time
your application starts a new transaction and the time it actually submits the transaction to PayPal. In this case, we will re-attempt the
transaction automatically after refreshing the access token but this extra call will result in a longer time taken and hence
a poor user experience. Setting a valid expiry time will help mitigate this scenario</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setupWithCredentials:refreshUrl:tokenExpiryOrNil:thenCompletionHandler:</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/setupWithCompositeTokenString:thenCompletionHandler:</TokenIdentifier>
			<Abstract type="html">Parse composite token string like the one returned from https://github.com/djMax/paypal-retail-node and initialize the SDK with it.</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (void)setupWithCompositeTokenString:(NSString *)compositeString thenCompletionHandler:(PPHInitializationCompletionHandler)completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>compositeString</Name>
					<Abstract type="html">The all powerful composit token string in the format: &quot;sdk_token=[sandbox|live]:&lt;base 64 encoded JSON object in the format of [authToken, expiry, refreshURL]&gt;&quot;</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The handler that will fire once initialization is done.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setupWithCompositeTokenString:thenCompletionHandler:</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/setActiveMerchant:withMerchantId:completionHandler:</TokenIdentifier>
			<Abstract type="html">Set the currently active merchant for which all payment operations will be done.
We will persist this merchant information to secure storage.  When your app runs
again and you call setActiveMerchant with a merchantId we&apos;ve seen before we&apos;ll
automatically check the saved merchant info for that merchantId.  If you pass in
a nil or sparsely filled out merchant object we&apos;ll use the values we pulled from
storage.</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (void)setActiveMerchant:(PPHMerchantInfo *)merchant withMerchantId:(NSString *)merchantId completionHandler:(PPHAccessCompletionHandler)completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>merchant</Name>
					<Abstract type="html">The merchant information including OAuth credentials</Abstract>
				</Parameter><Parameter>
					<Name>merchantId</Name>
					<Abstract type="html">a value which we&apos;ll use to uniquely identify this merchant on this device so
we can save/fetch this specific merchant&apos;s information from local secure storage.
If more than one merchant logs into this system you should make sure you provide
different values.  This id belongs to the app and is not generated by paypal
nor sent down to the service.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The handler to be called when the merchant setup has completed
(setup includes a call to the server to verify the token and retrieve user information)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setActiveMerchant:withMerchantId:completionHandler:</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/hasLocationAccess</TokenIdentifier>
			<Abstract type="html">Returns YES if we have the access we need to device location information
(we ask for significant location changes so long as a transaction is in progress,
or for general location updates if the device does not support significant updates).</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (BOOL)hasLocationAccess</Declaration>
			
			
			<Anchor>//api/name/hasLocationAccess</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/askForLocationAccess</TokenIdentifier>
			<Abstract type="html">DEPRECATED
Calls &quot;- (void)startWatchingLocation&quot;
Returns YES.</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (BOOL)askForLocationAccess</Declaration>
			
			
			<Anchor>//api/name/askForLocationAccess</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/startWatchingLocation</TokenIdentifier>
			<Abstract type="html">Allow the SDK to begin watching the location to attach to payments. In the future allowing
the SDK to obtain a location fix will be a requirement for taking payments. Location monitoring
is automatically stopped and restarted when the app is suspended if it is being watched.</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (void)startWatchingLocation</Declaration>
			
			
			<Anchor>//api/name/startWatchingLocation</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/stopWatchingLocation</TokenIdentifier>
			<Abstract type="html">Disallow the SDK from getting location updates.</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (void)stopWatchingLocation</Declaration>
			
			
			<Anchor>//api/name/stopWatchingLocation</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/setBaseAPIURL:</TokenIdentifier>
			<Abstract type="html">For TEST purposes, you can set the service URL used for requests in the PayPal Here SDK</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (void)setBaseAPIURL:(NSURL *)url</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The base URL (essentially https://stagename/) for your non-live environment.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setBaseAPIURL:</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/selectEnvironmentWithType:</TokenIdentifier>
			<Abstract type="html">Used to select between PPHSDKServiceTypes - currently just Live or Sandbox.</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (void)selectEnvironmentWithType:(PPHSDKServiceType)serviceType</Declaration>
			<Parameters>
				<Parameter>
					<Name>serviceType</Name>
					<Abstract type="html">The service to connect to.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/selectEnvironmentWithType:</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/sdkVersion</TokenIdentifier>
			<Abstract type="html">The version of the SDK currently in use</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (NSString *)sdkVersion</Declaration>
			
			
			<Anchor>//api/name/sdkVersion</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/referrerCode</TokenIdentifier>
			<Abstract type="html">The partner referrer code.</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (NSString *)referrerCode</Declaration>
			
			
			<Anchor>//api/name/referrerCode</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/setReferrerCode:</TokenIdentifier>
			<Abstract type="html">Set the Partner Referrer code that is obtained after sigining up with PayPalHere.
NOTE: If the value is set in here, it would be automatically set within the invoice.
If not, you would need to feed in same the information within the invoice object.</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (void)setReferrerCode:(NSString *)referrerCode</Declaration>
			<Parameters>
				<Parameter>
					<Name>referrerCode</Name>
					<Abstract type="html">the referrer code that is obtained once a partner registers with PayPalHere.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setReferrerCode:</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/baseURL</TokenIdentifier>
			<Abstract type="html">Returns the current base URL</Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (NSString *)baseURL</Declaration>
			
			
			<Anchor>//api/name/baseURL</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PayPalHereSDK/sendStackTrace</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>PayPalHereSDKSingleton.h</DeclaredIn>
			
			<Declaration>+ (void)sendStackTrace</Declaration>
			
			
			<Anchor>//api/name/sendStackTrace</Anchor>
            <NodeRef refid="61"/>
		</Token>
		
        
        
	</File>
</Tokens>